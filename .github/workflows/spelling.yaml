name: Check Spelling

# Comment management is handled through a secondary job, for details see:
# https://github.com/check-spelling/check-spelling/wiki/Feature%3A-Restricted-Permissions
#
# `jobs.comment-push` runs when a push is made to a repository and the `jobs.spelling` job needs to make a comment
#   (in odd cases, it might actually run just to collapse a comment, but that's fairly rare)
#   it needs `contents: write` in order to add a comment.
#
# `jobs.comment-pr` runs when a pull_request is made to a repository and the `jobs.spelling` job needs to make a comment
#   or collapse a comment (in the case where it had previously made a comment and now no longer needs to show a comment)
#   it needs `pull-requests: write` in order to manipulate those comments.

# Updating pull request branches is managed via comment handling.
# For details, see: https://github.com/check-spelling/check-spelling/wiki/Feature:-Update-expect-list
#
# These elements work together to make it happen:
#
# `on.issue_comment`
#   This event listens to comments by users asking to update the metadata.
#
# `jobs.update`
#   This job runs in response to an issue_comment and will push a new commit
#   to update the spelling metadata.
#
# `with.experimental_apply_changes_via_bot`
#   Tells the action to support and generate messages that enable it
#   to make a commit to update the spelling metadata.
#
# `with.ssh_key`
#   In order to trigger workflows when the commit is made, you can provide a
#   secret (typically, a write-enabled github deploy key).
#
#   For background, see: https://github.com/check-spelling/check-spelling/wiki/Feature:-Update-with-deploy-key

# Sarif reporting
#
# Access to Sarif reports is generally restricted (by GitHub) to members of the repository.
#
# Requires enabling `security-events: write`
# and configuring the action with `use_sarif: 1`
#
#   For information on the feature, see: https://github.com/check-spelling/check-spelling/wiki/Feature:-Sarif-output

# Minimal workflow structure:
#
# on:
#   push:
#     ...
#   pull_request_target:
#     ...
# jobs:
#   # you only want the spelling job, all others should be omitted
#   spelling:
#     # remove `security-events: write` and `use_sarif: 1`
#     # remove `experimental_apply_changes_via_bot: 1`
#     ... otherwise adjust the `with:` as you wish

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - "**"
    types:
      - "opened"
      - "reopened"
      - "synchronize"
  issue_comment:
    types:
      - "created"

jobs:
  spelling:
    name: Check Spelling
    permissions:
      contents: read
      actions: read
      security-events: write
    outputs:
      followup: ${{ steps.spelling.outputs.followup }}
    runs-on: ubuntu-latest
    if: ${{ contains(github.event_name, 'pull_request') || github.event_name == 'push' }}
    concurrency:
      group: spelling-${{ github.event.pull_request.number || github.ref }}
      # note: If you use only_check_changed_files, you do not want cancel-in-progress
      cancel-in-progress: false
    steps:
      - name: check-spelling
        id: spelling
        uses: check-spelling/check-spelling@main
        with:
          suppress_push_for_open_pull_request: ${{ github.actor != 'dependabot[bot]' && 1 }}
          checkout: true
          check_file_names: 1
          spell_check_this: check-spelling/spell-check-this@main
          post_comment: 0
          use_magic_file: 1
          report-timing: 1
          warnings: bad-regex,binary-file,deprecated-feature,ignored-expect-variant,large-file,limited-references,no-newline-at-eof,noisy-file,non-alpha-in-dictionary,token-is-substring,unexpected-line-ending,whitespace-in-dictionary,minified-file,unsupported-configuration,no-files-to-check,unclosed-block-ignore-begin,unclosed-block-ignore-end
          experimental_apply_changes_via_bot: 1
          dictionary_source_prefixes: '{"cspell": "https://raw.githubusercontent.com/streetsidesoftware/cspell-dicts/main/dictionaries/"}'
          extra_dictionaries: |
            cspell:aws/dict/aws.txt
            cspell:bash/samples/bash-words.txt
            cspell:companies/dict/companies.txt
            cspell:css/dict/css.txt
            cspell:data-science/dict/data-science-models.txt
            cspell:data-science/dict/data-science.txt
            cspell:data-science/dict/data-science-tools.txt
            cspell:dart/src/dart.txt
            cspell:de_DE/src/German_de_DE.dic
            cspell:django/requirements.txt
            cspell:django/dict/django.txt
            cspell:docker/src/docker-words.txt
            cspell:en_GB/src/hunspell/en_GB.dic
            cspell:en_US/src/aoo-mozilla-en-dict/en_US.dic
            cspell:en_US/src/hunspell/en_US-large.dic
            cspell:filetypes/src/filetypes.txt
            cspell:flutter/src/flutter.txt
            cspell:fonts/dict/fonts.txt
            cspell:fr_FR/fr-fr.trie
            cspell:fullstack/dict/fullstack.txt
            cspell:golang/dict/go.txt
            cspell:google/dict/google.txt
            cspell:html/dict/html.txt
            cspell:it_IT/dict/it-it.trie
            cspell:java/src/java.txt
            cspell:k8s/dict/k8s.txt
            cspell:mnemonics/dict/mnemonics.txt
            cspell:monkeyc/src/monkeyc_keywords.txt
            cspell:node/dict/node.txt
            cspell:npm/dict/npm.txt
            cspell:people-names/dict/people-names.txt
            cspell:php/dict/php.txt
            cspell:python/dict/python.txt
            cspell:python/dict/python-common.txt
            cspell:shell/dict/shell-all-words.txt
            cspell:software-terms/dict/softwareTerms.txt
            cspell:software-terms/dict/webServices.txt
            cspell:sql/src/common-terms.txt
            cspell:sql/src/sql.txt
            cspell:sql/src/tsql.txt
            cspell:svelte/dict/svelte.txt
            cspell:terraform/dict/terraform.txt
            cspell:typescript/dict/typescript.txt
          check_extra_dictionaries:
            cspell:cryptocurrencies/dict/cryptocurrencies.txt
            cspell:gaming-terms/dict/gaming-terms.txt
            cspell:latex/dict/latex.txt
            cspell:public-licenses/src/additional-licenses.txt
            cspell:public-licenses/src/generated/public-licenses.txt
            cspell:scientific_terms_US/custom_scientific_US.trie
          ignore-pattern: "[^'a-záéíóúñçüA-ZÁÉÍÓÚÑÇÜ]"
          upper-pattern: "[A-ZÁÉÍÓÚÑÇÜ]"
          lower-pattern: "[a-záéíóúñçü]"
          not-lower-pattern: "[^a-záéíóúñçü]"
          not-upper-or-lower-pattern: "[^A-ZÁÉÍÓÚÑÇÜa-záéíóúñçü]"
          punctuation-pattern: "'"
          only_check_changed_files: true
          longest_word: "10"
