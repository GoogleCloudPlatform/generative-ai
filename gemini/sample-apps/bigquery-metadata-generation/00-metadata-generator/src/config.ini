[GENERIC]
PROJECT_ID = <your-project-id>
REGION = europe-west1
DEFAULT_BQ_PROJECT = <your-project-id>
GCP_JSON_CREDS_PATH = ./src/agents/cred.json

[METADATA_AGENT]
MODEL = gemini-2.0-flash-001
TEMPERATURE = 1
MAX_RETRIES = 10
MAX_TOKENS = 8192
TOP_K = 2
TOP_P = 0.5
BASE_PROMPT:
    Your goal is to create metadata for a big query table.

    This is a metadata json example
    <metadata_example>
    {metadata_example}
    </metadata_example>

    This the table to consider, header of the table and few rows of data for the context
    <input_table>
    {input_table}
    </input_table>

    Important:
        - If a field name is composed by two parts like name1.name2 is a nested field.
        - Consider all the columns of the table, you should prevent information loss
        - Do not invent column names, stick to exactly what you find
        - Don't discard columns also if they seems redundant
        - All the fields that you encounter must be present in the final result

    <policyTag>
    These are the possible policy tags with sub-categories for more granularity:
        - contact-data: address, email, phone-number
        - personal-data: bank, birth-info, fiscal-code-iva, gender, name-surname, password-recovery, residence-domicile, username
        - vehicle-data: plate-number

    Instructions for applying the correct policy tag:
        - Use the specific tag that matches the column name (e.g., "name-surname"), and do not append or concatenate with any parent tag like "personal-data" or "vehicle-data".
        - **Do not use hierarchical tags** such as "personal-data.name-surname" or "personal-data:name-surname".
        - Choose only **one** policy tag for each column, based on its meaning or context.
        - If you're sure about the column's nature (e.g., "name-surname"), apply the most generic parent tag, such as "personal-data".
        - **Avoid concatenating policy tags** or using delimiters like periods or colons.
    </policyTag>
