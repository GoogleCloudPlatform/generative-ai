[
  {
    "input": "I'm looking for products in the shoes category. What do you have?",
    "expected_final_response": "{\n  \"category\": \"shoes\",\n  \"product_count\": 1,\n  \"price_range\": \"$54.11 - $54.11\",\n  \"top_products\": [\n    {\n      \"product_id\": \"product_en_0090440\",\n      \"name\": \"Shoes Item 0440\",\n      \"price\": \"$54.11\",\n      \"stock\": 73\n    }\n  ]\n}",
    "tools_available": [
      "product_search",
      "order_status",
      "category_browse",
      "price_check",
      "customer_order_history",
      "final_answer"
    ],
    "expected_trajectory": [
      {
        "step_number": 1,
        "tool_name": "python_interpreter",
        "tool_input": {
          "code": "shoes_products = category_browse(category=\"shoes\")\nfinal_answer(shoes_products)"
        },
        "tool_output": "{\n  \"category\": \"shoes\",\n  \"product_count\": 1,\n  \"price_range\": \"$54.11 - $54.11\",\n  \"top_products\": [\n    {\n      \"product_id\": \"product_en_0090440\",\n      \"name\": \"Shoes Item 0440\",\n      \"price\": \"$54.11\",\n      \"stock\": 73\n    }\n  ]\n}",
        "reasoning": "\nCode:\n```py\nshoes_products = category_browse(category=\"shoes\")\nfinal_answer(shoes_products)\n```"
      }
    ],
    "validation_criteria": {
      "final_response": {
        "min_score": 1.0,
        "criteria": "Correct category, product count, price range, and product information are returned. Appropriate tools are used. The response is clearly communicated."
      },
      "tool_selection": {
        "expected_tools": [
          "category_browse",
          "final_answer"
        ],
        "criteria": "Tools should be called in appropriate order with correct arguments"
      },
      "reasoning_quality": {
        "criteria": "The agent correctly uses the `category_browse` tool with the \"shoes\" category and then the `final_answer` tool to display the results. The response is comprehensive and includes product count, price range, and top product details. The code is efficient and directly addresses the user prompt."
      }
    },
    "difficulty": "easy",
    "tags": [
      "agent_evaluation",
      "planning_enabled",
      "uses_category_browse",
      "uses_final_answer"
    ],
    "metadata": {
      "model": "WeaveVertexAIServerModel",
      "model_id": "google/gemini-2.0-flash",
      "num_steps": 1,
      "tools_used": [
        "category_browse",
        "final_answer"
      ],
      "has_planning": true
    }
  },
  {
    "input": "Can you check the status of my order OD179190?",
    "expected_final_response": "The order status is processing, and the estimated delivery date is 2025-02-22.",
    "tools_available": [
      "product_search",
      "order_status",
      "category_browse",
      "price_check",
      "customer_order_history",
      "final_answer"
    ],
    "expected_trajectory": [
      {
        "step_number": 1,
        "tool_name": "python_interpreter",
        "tool_input": {
          "code": "order_id = \"OD179190\"\norder_information = order_status(order_id=order_id)\nprint(order_information)"
        },
        "tool_output": null,
        "reasoning": "\nThought:I will use the `order_status` tool to check the status of the order with ID OD179190.\nCode:\n```py\norder_id = \"OD179190\"\norder_information = order_status(order_id=order_id)\nprint(order_information)\n```"
      },
      {
        "step_number": 2,
        "tool_name": "python_interpreter",
        "tool_input": {
          "code": "order_status_information = \"The order status is processing, and the estimated delivery date is 2025-02-22.\"\nfinal_answer(order_status_information)"
        },
        "tool_output": "The order status is processing, and the estimated delivery date is 2025-02-22.",
        "reasoning": "Thought:The order status is \"processing\". I will use the `final_answer` tool to provide the order status to the user.\nCode:\n```py\norder_status_information = \"The order status is processing, and the estimated delivery date is 2025-02-22.\"\nfinal_answer(order_status_information)\n```"
      }
    ],
    "validation_criteria": {
      "final_response": {
        "min_score": 1.0,
        "criteria": "The agent successfully used the available tools to respond to the user query accurately and completely. The response is also easy to understand."
      },
      "tool_selection": {
        "expected_tools": [
          "order_status",
          "final_answer"
        ],
        "criteria": "Tools should be called in appropriate order with correct arguments"
      },
      "reasoning_quality": {
        "criteria": "The agent correctly used the available tools to find the order status and return it to the user. The agent first used the `order_status` tool with the correct order ID, then used the `final_answer` tool to give the information back to the user."
      }
    },
    "difficulty": "easy",
    "tags": [
      "agent_evaluation",
      "planning_enabled",
      "uses_order_status",
      "uses_final_answer"
    ],
    "metadata": {
      "model": "WeaveVertexAIServerModel",
      "model_id": "google/gemini-2.0-flash",
      "num_steps": 2,
      "tools_used": [
        "order_status",
        "final_answer"
      ],
      "has_planning": true
    }
  },
  {
    "input": "Can you show me my recent orders? My customer ID is reviewer_en_0048495",
    "expected_final_response": "{\n  \"customer_id\": \"reviewer_en_0048495\",\n  \"order_count\": 1,\n  \"recent_orders\": [\n    {\n      \"order_id\": \"OD349791\",\n      \"date\": \"2024-10-24\",\n      \"status\": \"delivered\",\n      \"product_id\": \"product_en_0818466\",\n      \"delivery_date\": \"2024-10-30\"\n    }\n  ]\n}",
    "tools_available": [
      "product_search",
      "order_status",
      "category_browse",
      "price_check",
      "customer_order_history",
      "final_answer"
    ],
    "expected_trajectory": [
      {
        "step_number": 1,
        "tool_name": "python_interpreter",
        "tool_input": {
          "code": "customer_id = \"reviewer_en_0048495\"\norder_history = customer_order_history(customer_id=customer_id)\nfinal_answer(order_history)"
        },
        "tool_output": "{\n  \"customer_id\": \"reviewer_en_0048495\",\n  \"order_count\": 1,\n  \"recent_orders\": [\n    {\n      \"order_id\": \"OD349791\",\n      \"date\": \"2024-10-24\",\n      \"status\": \"delivered\",\n      \"product_id\": \"product_en_0818466\",\n      \"delivery_date\": \"2024-10-30\"\n    }\n  ]\n}",
        "reasoning": "\nCode:\n```py\ncustomer_id = \"reviewer_en_0048495\"\norder_history = customer_order_history(customer_id=customer_id)\nfinal_answer(order_history)\n```"
      }
    ],
    "validation_criteria": {
      "final_response": {
        "min_score": 1.0,
        "criteria": "Correct answer. Used appropriate tools and communicated the information clearly."
      },
      "tool_selection": {
        "expected_tools": [
          "customer_order_history",
          "final_answer"
        ],
        "criteria": "Tools should be called in appropriate order with correct arguments"
      },
      "reasoning_quality": {
        "criteria": "The agent correctly used the available tools and achieved the desired outcome. The agent correctly extracted the customer ID, used the tool to retrieve order history and displayed the result."
      }
    },
    "difficulty": "easy",
    "tags": [
      "agent_evaluation",
      "planning_enabled",
      "uses_customer_order_history",
      "uses_final_answer"
    ],
    "metadata": {
      "model": "WeaveVertexAIServerModel",
      "model_id": "google/gemini-2.0-flash",
      "num_steps": 1,
      "tools_used": [
        "customer_order_history",
        "final_answer"
      ],
      "has_planning": true
    }
  }
]